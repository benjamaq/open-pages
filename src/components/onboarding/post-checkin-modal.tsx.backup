'use client';

import { useState, useEffect } from 'react';
import { X, Calendar, TrendingUp, Users, ArrowRight, CheckCircle } from 'lucide-react';
import { TypeAnimation } from 'react-type-animation';
import { saveUserCondition } from '@/lib/db/userCondition';
import { TypingIndicator } from '@/components/elli/TypingIndicator';

interface PostCheckinModalProps {
  isOpen: boolean;
  onClose: () => void;
  onContinue: () => void;
  userId: string;
  userName: string;
  dayOneData: {
    mood: number | null;
    sleep_quality: number | null;
    pain: number | null;
  };
  communityStats: {
    totalUsers: number;
    usersWithSimilarCondition: number;
    condition: string;
  };
  personalizedInsight: {
    message: string;
    type: 'pain_high' | 'pain_low' | 'mood_high' | 'mood_low';
  };
}

const CONDITIONS = [
  'Chronic pain',
  'Fibromyalgia',
  'CFS / ME',
  'Autoimmune condition',
  'ADHD',
  'Perimenopause',
  'Other / Not sure',
];

// Condition-specific validation responses
const CONDITION_RESPONSES = {
  'Fibromyalgia': {
    title: 'Fibromyalgia. I get it.',
    message: `I've worked with so many people tracking fibro. Here's what I've learned:

Common patterns I see:
- Weather changes (barometric pressure) trigger flares for most
- Morning pain and stiffness - takes 2-3 hours to loosen up
- Sleep doesn\'t fix the exhaustion. You can sleep 10 hours and wake up more tired
- Brain fog, sensory sensitivity, the feeling of being "wired and tired"
- "You don't look sick" - the invisible illness struggle is real

What seems to help some people:
- Better sleep quality (even if it doesn't cure the pain)
- Gentle, consistent movement over intense exercise
- Managing stress (though that's easier said than done)

But here's the thing:

You're not them. Your body is different. Your triggers are different. What works for someone else might not work for you.

That's why we're doing this together.

I'm not here to tell you what to do. I'm here to help you figure out what works for YOU. Your patterns. Your triggers. Your body.

I know you've been dealing with this for a while. I know it's been hard. But we're going to work it out together.`,
    buttonText: "Let's figure this out together →"
  },
  'CFS / ME': {
    title: 'CFS/ME. I get it.',
    message: `I've seen countless people dealing with CFS. Here's what I've learned:

Common experiences:
- Post-exertional malaise (PEM) - do too much one day, body punishes you for days
- Unrefreshing sleep - sleeping 12 hours but waking up more exhausted
- Brain fog that makes words disappear mid-sentence, can't process information
- Energy management isn't optional - it's survival
- Boom-bust cycles: feeling okay → overdoing it → crash

What seems to help some people:
- Strict pacing (treating energy like a limited budget)
- Resting before you think you need to, not after you crash
- Tracking PEM triggers to avoid them

But here's the thing:

Your PEM triggers are different. Your energy limits are different. What crashes one person might be fine for you, or vice versa.

That's why we're doing this together.

I'm not here to tell you to "just pace better." I'm here to help you figure out YOUR specific triggers, YOUR energy patterns, YOUR thresholds.

I know you've tried everything. I know doctors haven't believed you. But we're going to work it out together - one day at a time.`,
    buttonText: "Let's figure out YOUR patterns →"
  },
  'Chronic pain': {
    title: 'Chronic pain. I get it.',
    message: `I've worked with so many people tracking chronic pain. Here's what I've learned:

Common struggles:
- Pain without clear diagnosis - doctors can't find the cause
- Medical gaslighting - "we can't find anything wrong" but you're still in pain
- Exhaustion from trying everything and nothing working consistently
- Pain that changes location, intensity, quality from day to day
- People not believing you because they can't see it

What seems to help some people:
- Identifying their specific triggers (sleep, stress, activity, weather)
- Having data to show doctors who don't believe them
- Finding small patterns in what feels like chaos

But here's the thing:

Your pain is unique. Your triggers are unique. What helps someone else might do nothing for you - or even make it worse.

That's why we're doing this together.

I'm not here to tell you "just try yoga" or "reduce stress." You've heard that a thousand times. I'm here to help you figure out what actually affects YOUR pain. Not someone else's. Yours.

I know you're exhausted from trying everything. I know you're skeptical this will help. But we're going to work it out together. Your patterns. Your body. Your answers.`,
    buttonText: "Help me understand YOUR pain →"
  },
  'Autoimmune condition': {
    title: 'Autoimmune condition. I get it.',
    message: `I've seen countless people tracking autoimmune conditions. Here's what I've learned:

Common patterns:
- Flares come out of nowhere with no warning
- Inflammation cycles that affect everything - pain, fatigue, brain fog
- Unpredictable symptoms - good days, then suddenly bad days
- Your immune system fighting the wrong battle
- Treatment side effects that sometimes feel worse than symptoms

What seems to help some people:
- Tracking to identify flare triggers (stress, food, sleep, hormones)
- Anti-inflammatory approaches (diet, supplements, sleep)
- Knowing when to push and when to rest

But here's the thing:

Your autoimmune condition is different. Your triggers are different. Your flare patterns are unique to you.

That's why we're doing this together.

I'm not here to tell you to "just avoid inflammatory foods" or "boost your immune system." I'm here to help you figure out what actually triggers YOUR flares, what YOUR body responds to.

I know autoimmune conditions are unpredictable. I know that's exhausting. But we're going to work it out together - tracking YOUR patterns, YOUR triggers.`,
    buttonText: "Let's figure out YOUR triggers →"
  },
  'ADHD': {
    title: 'ADHD. I get it.',
    message: `I've worked with so many people with ADHD tracking their health. Here's what I've learned:

Common challenges:
- Executive dysfunction makes tracking anything incredibly hard
- Forgetting to take meds, forgetting to check in, forgetting everything
- Pain makes ADHD symptoms worse - focus goes out the window
- Starting strong, then falling off after Day 2 or 3
- Rejection sensitivity when you "fail" at consistency

What seems to help some people:
- External reminders and systems, not relying on willpower
- Making check-ins stupidly short (10 seconds, not 10 minutes)
- Celebrating showing up at all, not perfect consistency

But here's the thing:

Your ADHD is different. Your executive function challenges are different. What works for someone else's brain might not work for yours.

That's why we're doing this together.

I'm not here to tell you to "just set a reminder" like that's simple. I know it's not. I'm here to help you figure out what actually works for YOUR brain, YOUR patterns, YOUR life.

I know tracking is hard with ADHD. The fact you're here at all? That's huge. We're going to make this work. Together.`,
    buttonText: "Let's make this work for YOUR brain →"
  },
  'Perimenopause': {
    title: 'Perimenopause. I get it.',
    message: `I've seen countless women tracking perimenopause. Here's what I've learned:

Common experiences:
- Hormone chaos - everything becomes unpredictable
- Sleep disruption, joint pain, brain fog, mood swings all at once
- Symptoms dismissed as "just menopause" or "normal aging"
- Hot flashes, night sweats disrupting everything
- Feeling gaslit by doctors who don't take it seriously

What seems to help some people:
- Tracking hormone patterns (when symptoms spike during cycle)
- Better sleep hygiene (though hormones make that hard)
- Magnesium, stress management, gentle movement

But here's the thing:

Your perimenopause is different. Your symptoms are different. Your hormone patterns are unique. What helps someone else might not touch your symptoms.

That's why we're doing this together.

I'm not here to tell you to "just accept it" or "it's natural." You deserve better than that. I'm here to help you figure out YOUR patterns, YOUR triggers, what actually helps YOU.

I know this is hard. I know you feel dismissed. But we're going to work it out together - tracking what YOUR body is doing, not what "most women" experience.`,
    buttonText: "Let's figure out YOUR patterns →"
  },
  'Other / Not sure': {
    title: 'Not sure what\'s causing it yet. That\'s okay.',
    message: `I've worked with so many people who don't have a diagnosis yet. Here's what I've learned:

Common experiences:
- Pain or symptoms without a clear name for it
- Doctors saying "we can't find anything wrong"
- Medical gaslighting - "it's probably just stress" or "maybe it's anxiety"
- Desperate for answers, trying everything
- Feeling invalidated because you can't name what's wrong

What matters:
- Your symptoms are real whether they have a diagnosis or not
- Tracking can help you find patterns doctors miss
- Having data helps when doctors don't believe you
- Sometimes patterns reveal what it actually is

But here's the thing:

Your body is unique. Your symptoms are unique. We're going to track what's actually happening for YOU, not what fits into a diagnostic box.

That's why we're doing this together.

I'm not here to diagnose you. I'm here to help you track YOUR patterns, YOUR triggers, YOUR symptoms - so you can figure out what's actually going on.

I know it's frustrating not having answers. I know doctors haven't been helpful. But we're going to work it out together. Building YOUR record. Finding YOUR patterns.`,
    buttonText: "Help me figure this out →"
  },
  'skipped': {
    title: 'That\'s okay.',
    message: `You don't have to name it right now.

What matters is that you're in pain, or dealing with symptoms, and you're here trying to figure it out.

I'll help you track what's happening - whatever it is - so we can find YOUR patterns and YOUR triggers.

You can always add more details later if you want. For now, let's just start tracking.

We're going to work this out together.`,
    buttonText: "Let's start tracking →"
  }
};

export default function PostCheckinModal({ 
  isOpen, 
  onClose, 
  onContinue, 
  userId,
  userName,
  dayOneData, 
  communityStats, 
  personalizedInsight 
}: PostCheckinModalProps) {
  const [currentStep, setCurrentStep] = useState(0);
  const [selectedCondition, setSelectedCondition] = useState<string | null>(null);
  const [conditionDetails, setConditionDetails] = useState('');
  const [skipped, setSkipped] = useState(false);
  const [showTypingAnimation, setShowTypingAnimation] = useState(true);
  const [showConditionValidation, setShowConditionValidation] = useState(false);
  const [showTypingIndicator, setShowTypingIndicator] = useState(false);
  const [showValidationMessage, setShowValidationMessage] = useState(false);

  useEffect(() => {
    if (isOpen) {
      setCurrentStep(0);
      setSelectedCondition(null);
      setConditionDetails('');
      setSkipped(false);
      setShowTypingAnimation(true);
      setShowConditionValidation(false);
      setShowTypingIndicator(false);
      setShowValidationMessage(false);
      
      // Show typing animation for 1.5 seconds
      const timer = setTimeout(() => {
        setShowTypingAnimation(false);
      }, 1500);
      
      return () => clearTimeout(timer);
    }
  }, [isOpen]);

  if (!isOpen) return null;

  // Generate Elli's welcome message based on pain level
  const getElliWelcomeMessage = (pain: number | null) => {
    if (pain === null) {
      return `I can see you've completed your first check-in. That takes courage.\n\nI'm here to help you spot patterns and find what works for you.`;
    }
    
    if (pain >= 7) {
      return `I can see you're dealing with pain at ${pain}/10 today. That's brutal, and I'm sorry you're going through this.\n\nThe fact that you're here? That takes courage.`;
    } else if (pain >= 4) {
      return `I can see you logged pain at ${pain}/10 today. Managing, but not easy.\n\nThe fact that you're here? That takes courage.`;
    } else {
      return `I can see today's a lighter pain day at ${pain}/10. I'll watch what's different.\n\nThe fact that you're here? That takes courage.`;
    }
  };

  // Generate pain-specific message
  const getPainMessage = (pain: number | null) => {
    if (pain === null) return "We'll start watching for patterns tomorrow.";
    
    if (pain >= 7) {
      return `You logged pain at ${pain}/10 today—that's brutal. Tomorrow we'll start watching: Did sleep make a difference? Did anything make it worse? Small patterns. That's all we need.`;
    } else if (pain >= 4) {
      return `You logged pain at ${pain}/10 today—managing, but not easy. Tomorrow we'll start watching: Did sleep make a difference? Did anything make it worse? Small patterns. That's all we need.`;
    } else {
      return `You logged pain at ${pain}/10 today—a lighter day. Tomorrow we'll start watching what kept it low. Small patterns. That's all we need.`;
    }
  };

  // Handle continue button click
  const handleContinue = async () => {
    // Save condition if provided
    if (!skipped && selectedCondition) {
      try {
        await saveUserCondition(userId, {
          primary: selectedCondition,
          details: conditionDetails || null,
        });
      } catch (error) {
        console.error('Failed to save condition:', error);
        // Continue anyway - don't block user flow
      }
    }
    
    onContinue();
  };

  const handleSkip = () => {
    setSkipped(true);
  };

  // Handle condition selection with validation flow
  const handleConditionSelect = (condition: string) => {
    setSelectedCondition(condition);
    setShowConditionValidation(true);
    setShowTypingIndicator(true);

    // Hide typing indicator after 1.5s and show validation message
    setTimeout(() => {
      setShowTypingIndicator(false);
      setShowValidationMessage(true);
    }, 1500);
  };

  // Generate community message based on pain level
  const getCommunityMessage = (pain: number | null, count: number) => {
    if (pain !== null && pain >= 7) {
      return `${count} people logged severe pain today. You're in the right place.`;
    }
    return `You're one of ${count} people tracking chronic pain today.`;
  };

  const getInsightIcon = (type: string) => {
    switch (type) {
      case 'pain_high':
        return '🩹';
      case 'pain_low':
        return '✨';
      case 'mood_high':
        return '🚀';
      case 'mood_low':
        return '💙';
      default:
        return '📊';
    }
  };

  const getInsightColor = (type: string) => {
    switch (type) {
      case 'pain_high':
        return 'bg-red-50 border-red-200 text-red-800';
      case 'pain_low':
        return 'bg-green-50 border-green-200 text-green-800';
      case 'mood_high':
        return 'bg-blue-50 border-blue-200 text-blue-800';
      case 'mood_low':
        return 'bg-purple-50 border-purple-200 text-purple-800';
      default:
        return 'bg-gray-50 border-gray-200 text-gray-800';
    }
  };

  // Show condition validation if condition is selected
  if (showConditionValidation && selectedCondition) {
    const response = CONDITION_RESPONSES[selectedCondition as keyof typeof CONDITION_RESPONSES];
    
    return (
      <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-2xl max-w-lg w-full max-h-[90vh] overflow-y-auto">
          {/* Header */}
          <div className="relative p-6 border-b border-gray-100">
            <button
              onClick={onClose}
              className="absolute top-4 right-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <X className="w-5 h-5 text-gray-500" />
            </button>
            
            {/* Elli Avatar */}
            <div className="text-center">
              <div className="text-5xl mb-4">💙</div>
            </div>
          </div>

          {/* Content */}
          <div className="p-6">
            {/* Typing indicator or message */}
            {showTypingIndicator ? (
              <div className="flex items-center justify-center py-8">
                <TypingIndicator />
              </div>
            ) : showValidationMessage && response ? (
              <div className="space-y-6">
                <TypeAnimation
                  sequence={[
                    response.title,
                    500, // Pause after title
                    response.title + '\n\n' + response.message
                  ]}
                  speed={75}
                  wrapper="div"
                  className="text-gray-700 whitespace-pre-line leading-relaxed"
                />

                <button
                  onClick={handleContinue}
                  className="w-full bg-purple-600 text-white py-3 px-6 rounded-lg hover:bg-purple-700 transition-colors font-medium"
                >
                  {response.buttonText}
                </button>
              </div>
            ) : null}
          </div>
        </div>
      </div>
    );
  }

  // Show skip validation if user skipped
  if (skipped) {
    const response = CONDITION_RESPONSES['skipped'];
    
    return (
      <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-2xl max-w-lg w-full max-h-[90vh] overflow-y-auto">
          {/* Header */}
          <div className="relative p-6 border-b border-gray-100">
            <button
              onClick={onClose}
              className="absolute top-4 right-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
            >
              <X className="w-5 h-5 text-gray-500" />
            </button>
            
            {/* Elli Avatar */}
            <div className="text-center">
              <div className="text-5xl mb-4">💙</div>
            </div>
          </div>

          {/* Content */}
          <div className="p-6">
            <div className="space-y-6">
              <TypeAnimation
                sequence={[
                  response.title,
                  500, // Pause after title
                  response.title + '\n\n' + response.message
                ]}
                speed={75}
                wrapper="div"
                className="text-gray-700 whitespace-pre-line leading-relaxed"
              />

              <button
                onClick={handleContinue}
                className="w-full bg-purple-600 text-white py-3 px-6 rounded-lg hover:bg-purple-700 transition-colors font-medium"
              >
                {response.buttonText}
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // Original modal for condition selection
  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl max-w-md w-full max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="relative p-6 border-b border-gray-100">
          <button
            onClick={onClose}
            className="absolute top-4 right-4 p-2 hover:bg-gray-100 rounded-full transition-colors"
          >
            <X className="w-5 h-5 text-gray-500" />
          </button>
          
          {/* Elli Avatar and Welcome */}
          <div className="text-center">
            <div className="text-5xl mb-4">💙</div>
            <h2 className="text-xl font-bold text-gray-900 mb-2">
              Hi {userName}, I'm Elli 💙
            </h2>
            
            {/* Typing animation effect */}
            {showTypingAnimation ? (
              <div className="flex items-center justify-center text-gray-500 h-20">
                <div className="flex items-center gap-1">
                  <span className="w-2 h-2 bg-purple-500 rounded-full animate-bounce" style={{ animationDelay: '0ms', animationDuration: '1s' }} />
                  <span className="w-2 h-2 bg-purple-500 rounded-full animate-bounce" style={{ animationDelay: '150ms', animationDuration: '1s' }} />
                  <span className="w-2 h-2 bg-purple-500 rounded-full animate-bounce" style={{ animationDelay: '300ms', animationDuration: '1s' }} />
                </div>
              </div>
            ) : (
              <p className="text-gray-700 leading-relaxed whitespace-pre-line">
                {getElliWelcomeMessage(dayOneData.pain)}
              </p>
            )}
          </div>
        </div>

        {/* Content */}
        <div className="p-6 space-y-6">
          {/* Condition Capture Section */}
          <div className="border-t border-gray-200 pt-6 -mt-6">
            <p className="text-gray-800 font-medium mb-4 text-center">
              Mind if I ask - what brings you here?
            </p>

            {/* Quick Select Buttons */}
            <div className="grid grid-cols-2 gap-2 mb-4">
              {CONDITIONS.map((condition) => (
                <button
                  key={condition}
                  onClick={() => handleConditionSelect(condition)}
                  className="px-3 py-2.5 rounded-lg border-2 border-gray-300 bg-white text-gray-700 hover:border-purple-300 transition-all text-sm font-medium"
                >
                  {condition}
                </button>
              ))}
            </div>

            {/* Skip Button */}
            <div className="text-center mb-4">
              <button
                onClick={() => handleConditionSelect('skipped')}
                className="text-sm text-gray-500 hover:text-gray-700 underline"
              >
                Skip for now
              </button>
            </div>
          </div>

          {/* Timeline Section */}
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-4">
            <div className="flex items-center mb-3">
              <span className="text-xl mr-2">📅</span>
              <h3 className="font-semibold text-gray-900">What Happens Next</h3>
            </div>
            
            <div className="space-y-3">
              <div className="flex items-center">
                <div className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center mr-3">
                  <CheckCircle className="w-4 h-4 text-white" />
                </div>
                <div>
                  <div className="font-medium text-gray-900">Day 1 (Today)</div>
                  <div className="text-sm text-gray-600">Baseline recorded ✓</div>
                </div>
              </div>
              
              <div className="flex items-center">
                <div className="w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center mr-3">
                  <div className="w-2 h-2 bg-gray-500 rounded-full"></div>
                </div>
                <div>
                  <div className="font-medium text-gray-900">Day 3</div>
                  <div className="text-sm text-gray-600">First pattern emerges</div>
                </div>
              </div>
              
              <div className="flex items-center">
                <div className="w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center mr-3">
                  <div className="w-2 h-2 bg-gray-500 rounded-full"></div>
                </div>
                <div>
                  <div className="font-medium text-gray-900">Day 7</div>
                  <div className="text-sm text-gray-600">Weekly summary unlocked</div>
                </div>
              </div>
              
              <div className="flex items-center">
                <div className="w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center mr-3">
                  <div className="w-2 h-2 bg-gray-500 rounded-full"></div>
                </div>
                <div>
                  <div className="font-medium text-gray-900">Day 30</div>
                  <div className="text-sm text-gray-600">Full heatmap ready</div>
                </div>
              </div>
            </div>
          </div>

          {/* Personalized Insight Card */}
          <div className={`border-2 rounded-xl p-4 ${getInsightColor(personalizedInsight.type)}`}>
            <div className="flex items-start">
              <div className="text-2xl mr-3">
                {getInsightIcon(personalizedInsight.type)}
              </div>
              <div className="flex-1">
                <h4 className="font-semibold mb-2">💙 Today's Pain</h4>
                <p className="text-sm leading-relaxed">
                  {getPainMessage(dayOneData.pain)}
                </p>
              </div>
            </div>
          </div>

          {/* Community Stats */}
          <div className="bg-amber-50 border border-amber-200 rounded-xl p-4">
            <div className="flex items-center mb-2">
              <Users className="w-5 h-5 text-amber-600 mr-2" />
              <h4 className="font-semibold text-amber-800">You're Not Alone</h4>
            </div>
            <p className="text-sm text-amber-700">
              {getCommunityMessage(dayOneData.pain, communityStats.usersWithSimilarCondition)}
            </p>
          </div>

          {/* Your Day 1 Summary */}
          <div className="bg-gray-50 rounded-xl p-4">
            <h4 className="font-semibold text-gray-900 mb-3">Your Day 1</h4>
            <div className="grid grid-cols-3 gap-3 text-center mb-3">
              <div>
                <div className="text-lg font-bold text-blue-600">{dayOneData.mood || '—'}</div>
                <div className="text-xs text-gray-600">Mood</div>
              </div>
              <div>
                <div className="text-lg font-bold text-purple-600">{dayOneData.sleep_quality || '—'}</div>
                <div className="text-xs text-gray-600">Sleep</div>
              </div>
              <div>
                <div className="text-lg font-bold text-red-600">{dayOneData.pain || '—'}</div>
                <div className="text-xs text-gray-600">Pain</div>
              </div>
            </div>
            <p className="text-sm text-gray-600 text-center">We'll watch how these move together.</p>
          </div>
        </div>
      </div>
    </div>
  );
}
